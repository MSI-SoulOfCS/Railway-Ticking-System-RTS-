<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	  	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd        
    	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	 
	<!--********************************************************************************-->
	<!--********************************* Controllers **********************************-->
	<!--********************************************************************************-->
	
	<!-- With this component-scan tag, Spring will automatically wire all objects with @controller annotations -->
	<!-- Since we're doing a component scan here which includes services, we'll need to make this transactional annotation driven as well -->
	
 	<tx:annotation-driven /> 
 	
 	<!-- Allows for @Controller validation  -->
	<mvc:annotation-driven />
 		   
    <context:component-scan base-package="com.mercury.demand"/>
    
    <!--********************************************************************************-->
	<!--******************************* Session Objects ********************************-->
	<!--********************************************************************************-->

	<!-- 
    <bean id="userSessionInfo" class="com.thg.demand.domain.UserSessionInfo" scope="session" >
    	<aop:scoped-proxy/>
    </bean> 
    -->	  
	
	
	<!--********************************************************************************-->
	<!--*********************************** Context ************************************-->
	<!--********************************************************************************-->
	
    <!-- <bean id="propertyConfigurer" class="com.mercury.common.spring.HostPrecedingPropertyPlaceholderConfigurer">
		<property name="location" value="classpath:com/mercury/common/resource/host_environment.properties" />
    </bean> -->
 	 	
	<!--********************************************************************************-->
	<!--******************************** View Resolvers ********************************-->
	<!--********************************************************************************-->
 
  	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
      	<property name="prefix" value="/WEB-INF/pages/"/>
      	<property name="suffix" value=".jsp"/>
  	</bean>
 
 	<mvc:resources location="/css/" mapping="/css/**" />
  	<mvc:resources location="/img/" mapping="/img/**" />
 
</beans>